package com.pedidos.reservadegrass.activity;import android.app.Fragment;import android.app.FragmentManager;import android.content.Intent;import android.os.Bundle;import android.view.LayoutInflater;import android.view.Menu;import android.view.MenuItem;import android.view.View;import android.view.ViewGroup;import android.widget.ImageView;import android.widget.TextView;import android.widget.Toast;import com.bumptech.glide.Glide;import com.firebase.ui.firestore.FirestoreRecyclerAdapter;import com.firebase.ui.firestore.FirestoreRecyclerOptions;import com.google.android.material.navigation.NavigationView;import com.google.firebase.firestore.FirebaseFirestore;import com.google.firebase.firestore.Query;import com.pedidos.reservadegrass.R;import com.pedidos.reservadegrass.data.VentasObjeto;import androidx.annotation.NonNull;import androidx.appcompat.app.ActionBarDrawerToggle;import androidx.appcompat.app.AppCompatActivity;import androidx.appcompat.widget.Toolbar;import androidx.core.view.GravityCompat;import androidx.drawerlayout.widget.DrawerLayout;import androidx.recyclerview.widget.LinearLayoutManager;import androidx.recyclerview.widget.RecyclerView;public class VentasActivity extends AppCompatActivity		implements NavigationView.OnNavigationItemSelectedListener {	Toolbar toolbar;	DrawerLayout drawer;	NavigationView navigationView;	FragmentManager fragmentManager;	Fragment fragment = null;//FirebaseFirestore rootRef;	RecyclerView recyclerView;	private FirestoreRecyclerAdapter adapter;	@Override	protected void onCreate(Bundle savedInstanceState) {		super.onCreate(savedInstanceState);		setContentView(R.layout.activity_main);		toolbar =  findViewById(R.id.toolbar);		setSupportActionBar(toolbar);		drawer = (DrawerLayout) findViewById(R.id.drawer_layout);		ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(				this, drawer, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);		drawer.addDrawerListener(toggle);		toggle.syncState();		navigationView = (NavigationView) findViewById(R.id.nav_view);		navigationView.setNavigationItemSelectedListener(this);	/*	// tampilan default awal ketika aplikasii dijalankan		if (savedInstanceState == null) {			fragment = new Root();			callFragment(fragment);		}*/		rootRef	= FirebaseFirestore.getInstance();		recyclerView= findViewById(R.id.recyclerview);		Query query = rootRef.collection("ventas");		//   .orderBy("dni", Query.Direction.ASCENDING);		FirestoreRecyclerOptions<VentasObjeto> response = new FirestoreRecyclerOptions.Builder<VentasObjeto>()				                                            .setQuery(query, VentasObjeto.class)				                                            .build();		adapter = new FirestoreRecyclerAdapter<VentasObjeto , ProductViewHolder>(response) {			@NonNull			@Override			public ProductViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {				View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.item_productos, parent, false);				return new VentasActivity.ProductViewHolder(view);			}			@Override			protected void onBindViewHolder(@NonNull ProductViewHolder holder, int position, @NonNull VentasObjeto model) {				holder.nombre.setText(model.getNombre());				holder.description.setText(model.getDescripcion());				holder.tvprecio.setText("$ "+model.getPrecio());				Glide.with(VentasActivity.this)						.load(model.getUrl())						.into(holder.imagen);				holder.imagen.setOnClickListener(new View.OnClickListener() {					@Override					public void onClick(View view) {						//adapter.stopListening();						//Toast.makeText(VentasActivity.this,"RESERVADO",Toast.LENGTH_SHORT).show();					}				});			}		};		recyclerView.setHasFixedSize(true);recyclerView.setLayoutManager(new LinearLayoutManager(this));		//		recyclerView.setLayoutManager(new GridLayoutManager(this,2));		recyclerView.setAdapter(adapter);	}	@Override	public void onBackPressed() {		drawer = (DrawerLayout) findViewById(R.id.drawer_layout);		if (drawer.isDrawerOpen(GravityCompat.START)) {			drawer.closeDrawer(GravityCompat.START);		} else {			super.onBackPressed();		}	}	@Override	public boolean onCreateOptionsMenu(Menu menu) {		// Inflate the menu; this adds items to the action bar if it is present.		getMenuInflater().inflate(R.menu.main, menu);		return true;	}	@Override	public boolean onOptionsItemSelected(MenuItem item) {		// Handle action bar item clicks here. The action bar will		// automatically handle clicks on the Home/Up button, so long		// as you specify a parent activity in AndroidManifest.xml.		int id = item.getItemId();		//noinspection SimplifiableIfStatement		if (id == R.id.action_settings) {			Toast.makeText(getApplicationContext(), "Action Settings", Toast.LENGTH_SHORT).show();			return true;		}		return super.onOptionsItemSelected(item);	}	@SuppressWarnings("StatementWithEmptyBody")	@Override	public boolean onNavigationItemSelected(MenuItem item) {		// Handle navigation view item clicks here.		int id = item.getItemId();		if (id == R.id.item_ventas) {		Toast.makeText(this,"Ya estas aqui", Toast.LENGTH_LONG).show();		} else if (id == R.id.item_compras) {			adapter.stopListening();			startActivity(new Intent(VentasActivity.this, ComprasActivy.class));			finish();		} else if (id == R.id.item_objtoperdido) {			adapter.stopListening();			startActivity(new Intent(VentasActivity.this, ObjetoPerdidoActivity.class));			finish();		}		if (id == R.id.item_addventas) {			adapter.stopListening();			startActivity(new Intent(VentasActivity.this, SubirVentaActivy.class));			finish();		} else if (id == R.id.item_addcompras) {			adapter.stopListening();			startActivity(new Intent(VentasActivity.this, SubirCompraActivy.class));			finish();		} else if (id == R.id.item_addobjetosperdidos) {			adapter.stopListening();			startActivity(new Intent(VentasActivity.this, SubirObejtoPerdidoActivy.class));			finish();		}		drawer = (DrawerLayout) findViewById(R.id.drawer_layout);		drawer.closeDrawer(GravityCompat.START);		return true;	}	// untuk mengganti isi kontainer menu yang dipiih	private void callFragment(Fragment fragment) {		fragmentManager = getFragmentManager();		fragmentManager.beginTransaction()				.replace(R.id.frame_container, fragment)				.commit();	}	private class ProductViewHolder extends RecyclerView.ViewHolder {		//	public View view;		private TextView nombre, description, tvprecio;		ImageView imagen;		ProductViewHolder(View itemView) {			super(itemView);			//view = itemView;			nombre= itemView.findViewById(R.id.tvnombre);			description = itemView.findViewById(R.id.tvDescripcion);			tvprecio = itemView.findViewById(R.id.tvPrecio);			imagen  = itemView.findViewById(R.id.imagen);		}/*		void setProductName(String productName) {			TextView textView = view.findViewById(R.id.tvnombre);			textView.setText(productName);		}*/	}	@Override	protected void onStart() {		super.onStart();		adapter.startListening();	}	@Override	protected void onStop() {		super.onStop();		if (adapter != null) {			adapter.stopListening();		}	}}